name: Build & Tests
'on':
  pull_request:
    branches: dev
    types:
      - opened
      - synchronize
  merge_group:
    types: [checks_requested]

jobs:
  build-debug:
    name: Build Lib/Tests Debug
    strategy:
      matrix:
        os:
          - ubuntu-24.04
          - windows-2019
          - macos-15
    runs-on: ${{ matrix.os }}
    steps:
      - name: 'Checkout ${{ github.repositoryUrl }} ${{ github.base_ref }}'
        uses: actions/checkout@master
      - name: Build Library Debug
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: '-p spacebuild --lib'
      - name: Build Integration Tests Debug
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: '-p spacebuild --tests'
      - name: Bundle Tests Binaries
        shell: pwsh
        run: >
          $cargoOutputPath = "cargo_out.txt"

          $targetDir = "tests_bins"

          $cargoProcess = Start-Process -FilePath "cargo" -ArgumentList "test",
          "--no-run" `
              -RedirectStandardError $cargoOutputPath -NoNewWindow -Wait -PassThru
          if ($cargoProcess.ExitCode -ne 0 -or -not (Test-Path $cargoOutputPath)
          -or -not (Get-Content $cargoOutputPath)) { exit 1 }

          $binaryPaths = Get-Content $cargoOutputPath | Select-String -Pattern
          'Executable.*\((.+?)\)' | ForEach-Object { $_.Matches.Groups[1].Value
          }

          if (-not $binaryPaths) { exit 1 }

          if (-not (Test-Path $targetDir)) { New-Item -ItemType Directory -Path
          $targetDir | Out-Null }

          foreach ($binaryPath in $binaryPaths) {
              if (-not (Test-Path $binaryPath)) { exit 1 }
              $basename = [System.IO.Path]::GetFileNameWithoutExtension($binaryPath).Split('-')[0]
              Copy-Item -Path $binaryPath -Destination (Join-Path $targetDir $basename) -Force
          }
      - name: Upload Test Binaries
        uses: actions/upload-artifact@v4
        with:
          name: 'tests-${{matrix.os}}'
          path: tests_bins
  tests-instance:
    name: Tests Instance
    needs: build-debug
    strategy:
      matrix:
        os:
          - ubuntu-24.04
          - windows-2019
          - macos-15
        case:
          - case_01
          - case_02
          - case_03
          - case_04
          - case_05
    runs-on: ${{ matrix.os }}
    steps:
      - name: Get Test Binaries
        uses: actions/download-artifact@v4
        with:
          name: 'tests-${{matrix.os}}'
          path: tests_bins
      - name: Chmod if necessary
        if: ${{ contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos')}}
        run: |
          chmod +x tests_bins/instance
      - name: Run Tests
        run: 'tests_bins/instance ${{ matrix.case }}'
        env:
          RUST_LOG: INFO
          TMPDIR: ./
  tests-game:
    name: Tests Game
    needs: build-debug
    strategy:
      matrix:
        os:
          - ubuntu-24.04
          - windows-2019
          - macos-15
        case:
          - case_01
          - case_02
          - case_03
          - case_04
          - case_05
          - case_06
          - case_07
          - case_08
    runs-on: ${{ matrix.os }}
    steps:
      - name: Get Test Binaries
        uses: actions/download-artifact@v4
        with:
          name: 'tests-${{matrix.os}}'
          path: tests_bins
      - name: Chmod if necessary
        if: ${{ contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos')}}
        run: |
          chmod +x tests_bins/game
      - name: Run Tests
        run: 'tests_bins/game ${{ matrix.case }}'
        env:
          RUST_LOG: INFO
          TMPDIR: ./
